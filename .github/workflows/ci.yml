name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      # Tests that need a DB should read from this env var.
      # Your app/tests should use process.env.MONGO_URL when connecting.
      MONGO_URL: mongodb://localhost:27017/farmarket_test
      NODE_ENV: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci


      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..60}; do
            if bash -c "cat < /dev/tcp/localhost/27017" >/dev/null 2>&1; then
              echo "MongoDB is listening on port 27017"
              exit 0
            fi
            echo "Waiting for MongoDB... ($i/60)"
            sleep 1
          done
          echo "Mongo did not start in time" && exit 1


      - name: Run tests
        run: |
          # Use your test script (e.g. jest/mocha). Ensure it reads MONGO_URL env var
          npm test
